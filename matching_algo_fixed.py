# -*- coding: utf-8 -*-
"""matching_algo_fixed.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tudgpobmdP48fMbIYNkKi3-HBtGWiFog
"""

#!pip install smopy


import pandas as pd
import folium
df=pd.read_csv(r"postcodes.csv")
latitude = 53.2194
longitude = 6.5665
import smopy
# map = smopy.Map((53.2194, 6.5665), z=4)
# map.show_ipython()
# this is a dictionary that we use for assigning the colors to different districts when we are showing our map, the value is in pair called "keys" and "value", left side value is called "key" and right side value is called "value"
cnames = {
'aliceblue':            '#F0F8FF',
'antiquewhite':         '#FAEBD7',
'aqua':                 '#00FFFF',
'aquamarine':           '#7FFFD4',
'azure':                '#F0FFFF',
'beige':                '#F5F5DC',
'bisque':               '#FFE4C4',
'black':                '#000000',
'blanchedalmond':       '#FFEBCD',
'blue':                 '#0000FF',
'blueviolet':           '#8A2BE2',
'brown':                '#A52A2A',
'burlywood':            '#DEB887',
'cadetblue':            '#5F9EA0',
'chartreuse':           '#7FFF00',
'chocolate':            '#D2691E',
'coral':                '#FF7F50',
'cornflowerblue':       '#6495ED',
'cornsilk':             '#FFF8DC',
'crimson':              '#DC143C',
'cyan':                 '#00FFFF',
'darkblue':             '#00008B',
'darkcyan':             '#008B8B',
'darkgoldenrod':        '#B8860B',
'darkgray':             '#A9A9A9',
'darkgreen':            '#006400',
'darkkhaki':            '#BDB76B',
'darkmagenta':          '#8B008B',
'darkolivegreen':       '#556B2F',
'darkorange':           '#FF8C00',
'darkorchid':           '#9932CC',
'darkred':              '#8B0000',
'darksalmon':           '#E9967A',
'darkseagreen':         '#8FBC8F',
'darkslateblue':        '#483D8B',
'darkslategray':        '#2F4F4F',
'darkturquoise':        '#00CED1',
'darkviolet':           '#9400D3',
'deeppink':             '#FF1493',
'deepskyblue':          '#00BFFF',
'dimgray':              '#696969',
'dodgerblue':           '#1E90FF',
'firebrick':            '#B22222',
'floralwhite':          '#FFFAF0',
'forestgreen':          '#228B22',
'fuchsia':              '#FF00FF',
'gainsboro':            '#DCDCDC',
'ghostwhite':           '#F8F8FF',
'gold':                 '#FFD700',
'goldenrod':            '#DAA520',
'gray':                 '#808080',
'green':                '#008000',
'greenyellow':          '#ADFF2F',
'honeydew':             '#F0FFF0',
'hotpink':              '#FF69B4',
'indianred':            '#CD5C5C',
'indigo':               '#4B0082',
'ivory':                '#FFFFF0',
'khaki':                '#F0E68C',
'lavender':             '#E6E6FA',
'lavenderblush':        '#FFF0F5',
'lawngreen':            '#7CFC00',
'lemonchiffon':         '#FFFACD',
'lightblue':            '#ADD8E6',
'lightcoral':           '#F08080',
'lightcyan':            '#E0FFFF',
'lightgoldenrodyellow': '#FAFAD2',
'lightgreen':           '#90EE90',
'lightgray':            '#D3D3D3',
'lightpink':            '#FFB6C1',
'lightsalmon':          '#FFA07A',
'lightseagreen':        '#20B2AA',
'lightskyblue':         '#87CEFA',
'lightslategray':       '#778899',
'lightsteelblue':       '#B0C4DE',
'lightyellow':          '#FFFFE0',
'lime':                 '#00FF00',
'limegreen':            '#32CD32',
'linen':                '#FAF0E6',
'magenta':              '#FF00FF',
'maroon':               '#800000',
'mediumaquamarine':     '#66CDAA',
'mediumblue':           '#0000CD',
'mediumorchid':         '#BA55D3',
'mediumpurple':         '#9370DB',
'mediumseagreen':       '#3CB371',
'mediumslateblue':      '#7B68EE',
'mediumspringgreen':    '#00FA9A',
'mediumturquoise':      '#48D1CC',
'mediumvioletred':      '#C71585',
'midnightblue':         '#191970',
'mintcream':            '#F5FFFA',
'mistyrose':            '#FFE4E1',
'moccasin':             '#FFE4B5',
'navajowhite':          '#FFDEAD',
'navy':                 '#000080',
'oldlace':              '#FDF5E6',
'olive':                '#808000',
'olivedrab':            '#6B8E23',
'orange':               '#FFA500',
'orangered':            '#FF4500',
'orchid':               '#DA70D6',
'palegoldenrod':        '#EEE8AA',
'palegreen':            '#98FB98',
'paleturquoise':        '#AFEEEE',
'palevioletred':        '#DB7093',
'papayawhip':           '#FFEFD5',
'peachpuff':            '#FFDAB9',
'peru':                 '#CD853F',
'pink':                 '#FFC0CB',
'plum':                 '#DDA0DD',
'powderblue':           '#B0E0E6',
'purple':               '#800080',
'red':                  '#FF0000',
'rosybrown':            '#BC8F8F',
'royalblue':            '#4169E1',
'saddlebrown':          '#8B4513',
'salmon':               '#FA8072',
'sandybrown':           '#FAA460',
'seagreen':             '#2E8B57',
'seashell':             '#FFF5EE',
'sienna':               '#A0522D',
'silver':               '#C0C0C0',
'skyblue':              '#87CEEB',
'slateblue':            '#6A5ACD',
'slategray':            '#708090',
'snow':                 '#FFFAFA',
'springgreen':          '#00FF7F',
'steelblue':            '#4682B4',
'tan':                  '#D2B48C',
'teal':                 '#008080',
'thistle':              '#D8BFD8',
'tomato':               '#FF6347',
'turquoise':            '#40E0D0',
'violet':               '#EE82EE',
'wheat':                '#F5DEB3',
'white':                '#FFFFFF',
'whitesmoke':           '#F5F5F5',
'yellow':               '#FFFF00',
'yellowgreen':          '#9ACD32'}


##################### BRO PLEASE GIVE ME A GOOD DESCRIPTIVE FEEDBACK PLEASE PLEASE IF YOU LIKE MY WORK AND CUSTOMER DEALING AND SERVICE, THANKS IN ADVANCE ##########################


colorslist=[]
for key in cnames.keys():
  colorslist.append(key)
  # I iterated all the color names (which is Keys in the dictionary, we dont need values, we just need keys as we only need to know the color name)
  # so I iterated all the color names and converted this into a list, so that we can easily iterate the color names when needed
print(colorslist)

postal = []
#
postcodes = df["Postcode"]
for i in postcodes:
    firstfour = i[0:4]
    postal.append(firstfour)
# here we make a list of only postal codes
print(postal)

districts =[]
numberofdistricts =0

##################### BRO PLEASE GIVE ME A GOOD DESCRIPTIVE FEEDBACK PLEASE PLEASE IF YOU LIKE MY WORK AND CUSTOMER DEALING AND SERVICE, THANKS IN ADVANCE ##########################

postcodes = df["Postcode"]
for i in range(len(postcodes)):
    if postal[i] not in districts:
        districts.append(postal[i])
  # here we  (you done it :p ) removes the duplicates because we only need unique values/means unique districts values so that we can assigns different colors to them


print(numberofdistricts)
print(districts)



#this is the function, that will run for each row of our dataframe,
def assigncolor(x):
    onlypostcode=x["Postcode"]       #in this function, we get postcode values

    onlypostcode=onlypostcode[0:4]      #extracted only first 4 character, because we only need postal codes

    index = districts.index(onlypostcode)  # then we try to find the index of that post code from our districts list, meaning we want to know where this post code is residing


    return colorslist[index]  # now if we give this index to our colorslist, it means we want to give this specific color to this postal address,,, whenever the same postal code comes, it will automatically assigns the same color whenever it is reappeared when checking



df['itscolor']=df.apply(lambda x : assigncolor(x), axis=1)   # this is the syntax of applying a our defined function to every row, no need to take it seriously, this is just a syntax,, this line will run our assigncolor for every row
# and the returned value will make a separate column in our existing dataframe. means a new dataframe will be made after it.

##### this snipped is onlyyyyyyyy for smopy

map = smopy.Map((53.2194, 6.5665), z=10)
ax = map.show_mpl(figsize=(30, 30))

#######Please bro, please dont forget to give that ....... when completing order. :) Thanks.
####I am myself amazed how I made impossible to possible
##### if you give any color to the map, it doesnt show. Theres a smalll fix that we need to do and Thank God I found that way on my own###
for i in range(len(df)):
  x, y = map.to_pixels(df['Latitude'].iloc[i],df['Longitude'].iloc[i])
  ax.plot(x, y, "or", color=colors[i], ms=10, mew=2)

########################################################

# this snippet is onlyyyyyyyy for folium #################


pinpoints = folium.map.FeatureGroup()  # make obj of folium map
i=0
colors=df['itscolor'].values.tolist()   # convert the newly made dataframe to a list so that we can easily iterate it when making a map
for lat, lng, in zip(df['Latitude'], df['Longitude']):   # iterate a looop
 pinpoints.add_child(folium.CircleMarker([lat, lng], radius=0.5, color=colors[i],fill=True,fill_color=colors[i], fill_opacity=1 ))   # this will make a pinpoint of every coordinates and now we will give the assigned colors

 # now the colors and coordinates will be arranged in that way, that it automatically shows same color to same districts, but different districts will show different

 i=i+1    # we have to add +1 in the value of i (this is used in iteration of the colorlist)
map.add_child(pinpoints)  # add all the poiint to the map
map  # and show the map to user



####################### till here , only smopy ###################################



